node{
    
def mavenHome = tool name: "Maven3.8.4"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
   
echo "Job name is : ${env.JOB_NAME} "
echo "node name is : ${env.NODE_NAME} "
echo "Build number is : ${env.BUILD_NUMBER} "
   
   
try{

sendSlackNotifications('STARTED')

stage('checkoutCode')
{
git branch: 'development', credentialsId: 'eaa29421-518a-41c4-8037-a281fa9bf3f5', url: 'https://github.com/ManideepPasavala/maven-web-application.git'
}

stage('Build')
{
sh "${mavenHome}/bin/mvn clean package"
}
stage('trigger'){
build job : 'pipelinescriptwithbulidparameters'
}

/*
stage('ExecuteSonarQubeReprt')
{
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage('UploadArtifactIntoNexus')
{
sh "${mavenHome}/bin/mvn deploy"
}

stage('DeployAppIntoTomcatServer')
{
sshagent(['89611027-8ca7-4e3c-b20a-8fba9d7c5e83']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.43.26:/opt/apache-tomcat-9.0.63/webapps"
}

}

*/
}catch(e){
currentBuild.result-"FAILED"
}
finally{
sendSlackNotifications(currentBuild.result)
}

}//node closing

//below code will send the slack notifications

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary,channel: 'walmart')
}
